{
  "fileName": "lunar-search.js",
  "filePath": "docs/src/theme/SearchBar/lib/lunar-search.js",
  "url": "https://github.com/solana-labs/solana-program-library/docs/src/theme/SearchBar/lib/lunar-search.js",
  "summary": "The `LunrSearchAdapter` class in this code is responsible for providing search functionality within the Solana Program Library documentation. It uses the `lunr` library to create a search index and perform queries on the indexed documents.\n\nThe constructor of the `LunrSearchAdapter` class takes two arguments: `searchDocs`, an array of documents to be searched, and `searchIndex`, a pre-built search index. The constructor initializes the `lunrIndex` by loading the provided search index.\n\nThe `getLunrResult` method performs a search query on the `lunrIndex` using the given input. It boosts the relevance of exact matches and allows for trailing wildcards in the search terms.\n\nThe `getHit`, `getTitleHit`, `getKeywordHit`, and `getContentHit` methods are responsible for formatting the search results. They create a structured object containing the document's hierarchy, URL, and highlighted search results. The `getTitleHit` and `getKeywordHit` methods specifically format the title and keywords of the document, while the `getContentHit` method formats the content preview with ellipses and highlighted search terms.\n\nThe `search` method is the main entry point for performing a search. It takes an input string and returns a promise that resolves with an array of search results. It first calls `getLunrResult` to get the raw search results, then iterates through the results and formats them using the appropriate `getHit` methods. The search results are limited to a maximum of 5 items.\n\nHere's an example of how the `LunrSearchAdapter` class can be used:\n\n```javascript\nconst searchDocs = [...] // Array of documents to be searched\nconst searchIndex = {...} // Pre-built search index\nconst searchAdapter = new LunrSearchAdapter(searchDocs, searchIndex);\n\nsearchAdapter.search(\"example query\").then(hits => {\n  console.log(hits); // Array of formatted search results\n});\n```\n\nIn the larger project, the `LunrSearchAdapter` class can be used to provide search functionality for the Solana Program Library documentation, allowing users to quickly find relevant information.",
  "questions": "1. **What is the purpose of the `LunrSearchAdapter` class?**\n\n   The `LunrSearchAdapter` class is a search adapter that uses the Lunr.js library to perform search operations on a given set of documents and index. It provides methods to search for input terms in the document titles, content, and keywords, and returns formatted search results with highlights.\n\n2. **How does the `search` method work and what does it return?**\n\n   The `search` method takes an input string and performs a search using the Lunr index. It processes the search results, extracting relevant information such as title, content, and keywords, and formats the results with highlights. The method returns a Promise that resolves to an array of formatted search results, limited to a maximum of 5 results.\n\n3. **What is the purpose of the `getHit`, `getTitleHit`, `getKeywordHit`, and `getContentHit` methods?**\n\n   These methods are used to create and format search result objects (hits) based on the search results. `getHit` is a generic method that creates a hit object with the provided information. `getTitleHit`, `getKeywordHit`, and `getContentHit` are specialized methods that create hits for title matches, keyword matches, and content matches, respectively, by formatting the relevant information and calling `getHit` with the appropriate arguments."
}