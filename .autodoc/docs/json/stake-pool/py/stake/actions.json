{
  "fileName": "actions.py",
  "filePath": "stake-pool/py/stake/actions.py",
  "url": "https://github.com/solana-labs/solana-program-library/stake-pool/py/stake/actions.py",
  "summary": "This code is responsible for managing stake accounts in the Solana program library. It provides three main asynchronous functions: `create_stake`, `delegate_stake`, and `authorize`. These functions interact with the Solana blockchain to create, delegate, and authorize stake accounts, respectively.\n\n`create_stake` function creates a new stake account with the specified authority and initial lamports (native tokens in Solana). It first calculates the minimum balance required for rent exemption and then creates a transaction with two instructions: `sys.create_account` and `st.initialize`. The `sys.create_account` instruction creates a new account with the specified parameters, while the `st.initialize` instruction initializes the stake account with the given authorized staker and withdrawer, and lockup information.\n\n```python\nawait create_stake(client, payer, stake, authority, lamports)\n```\n\n`delegate_stake` function delegates a stake account to a vote account. It creates a transaction with the `st.delegate_stake` instruction, which takes the stake account, vote account, and other required system variables as parameters. The transaction is then signed by the payer and staker and sent to the Solana network.\n\n```python\nawait delegate_stake(client, payer, staker, stake, vote)\n```\n\n`authorize` function changes the authority of a stake account. It creates a transaction with the `st.authorize` instruction, which takes the stake account, current authority, new authority, and the type of authority to change (staker or withdrawer) as parameters. The transaction is then signed by the payer and current authority and sent to the Solana network.\n\n```python\nawait authorize(client, payer, authority, stake, new_authority, stake_authorize)\n```\n\nThese functions can be used in the larger project to manage stake accounts, delegate stakes to validators, and update authorities for better control over the staking process.",
  "questions": "1. **Question:** What is the purpose of the `create_stake` function and what are its input parameters?\n   **Answer:** The `create_stake` function is used to create a new stake account on the Solana blockchain. It takes an `AsyncClient` object, a `payer` Keypair, a `stake` Keypair, an `authority` PublicKey, and an integer `lamports` as input parameters.\n\n2. **Question:** How does the `delegate_stake` function work and what are its input parameters?\n   **Answer:** The `delegate_stake` function is used to delegate a stake account to a vote account on the Solana blockchain. It takes an `AsyncClient` object, a `payer` Keypair, a `staker` Keypair, a `stake` PublicKey, and a `vote` PublicKey as input parameters.\n\n3. **Question:** What is the purpose of the `authorize` function and what are its input parameters?\n   **Answer:** The `authorize` function is used to change the authority of a stake account on the Solana blockchain. It takes an `AsyncClient` object, a `payer` Keypair, an `authority` Keypair, a `stake` PublicKey, a `new_authority` PublicKey, and a `stake_authorize` StakeAuthorize object as input parameters."
}