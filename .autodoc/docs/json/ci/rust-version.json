{
  "fileName": "rust-version.sh",
  "filePath": "ci/rust-version.sh",
  "url": "https://github.com/solana-labs/solana-program-library/ci/rust-version.sh",
  "summary": "This script is responsible for managing Rust versions used in the Solana Program Library project. It sets up the environment variables for both stable and nightly Rust versions and provides a way to install or update the Rust toolchain as needed.\n\nThe script first checks if the `RUST_STABLE_VERSION` and `RUST_NIGHTLY_VERSION` environment variables are set. If not, it reads the stable version from the `rust-toolchain.toml` file and sets the nightly version to a specific date (e.g., `2022-04-01`).\n\nIt then exports the environment variables `rust_stable`, `rust_stable_docker_image`, `rust_nightly`, and `rust_nightly_docker_image` for use in other scripts or commands.\n\nTo use this script, you can source it with different arguments:\n\n- `source ci/rust-version.sh all`: Update both stable and nightly Rust toolchains.\n- `source ci/rust-version.sh stable`: Update only the stable Rust toolchain.\n- `source ci/rust-version.sh nightly`: Update only the nightly Rust toolchain.\n\nAfter sourcing the script, you can build the project with either the stable or nightly Rust version using the following commands:\n\n```bash\n$ cargo +\"$rust_stable\" build\n$ cargo +\"$rust_nightly\" build\n```\n\nThe script also includes a `rustup_install` function that installs the specified Rust toolchain if it's not already installed. This function is called based on the argument passed to the script (e.g., `stable`, `nightly`, or `all`).",
  "questions": "1. **Question:** What is the purpose of this script?\n   **Answer:** This script is used to manage Rust versions for the Solana Program Library project. It sets environment variables for stable and nightly Rust versions, and provides a way to install the required Rust toolchains for the project.\n\n2. **Question:** How can I use this script to update both stable and nightly Rust versions?\n   **Answer:** To update both stable and nightly Rust versions, you can run `source ci/rust-version.sh all`.\n\n3. **Question:** How can I build the project using the stable or nightly Rust version set by this script?\n   **Answer:** After sourcing the script, you can build the project using the stable Rust version with `cargo +\"$rust_stable\" build` or the nightly Rust version with `cargo +\"$rust_nightly\" build`."
}